#!/usr/bin/env node

const fs = require('fs')
const eq = require('deep-equal')
const argv = require('yargs')
  .alias('v', 'version')
  .boolean([ 'ast', 'tokens' ])
  .argv

function inspect(obj) {
  console.log(
    require('util').inspect(obj, {
      depth: null,
      colors: true,
    }))

  return obj
}

function ambiguous(obj) {
  obj.map(x => { inspect(x); console.log('\n') })
  process.exit(1)
}

if (argv.version) {
  // Print wew version and exit
  const ver = require('../package.json').version
  console.log(`wew ${ver} ðŸŽ‰`)
} else if (argv._.length) {
  // Interpret
  const { lex, parse, interp, error } = require('..')
  let fstream = fs.createReadStream(argv._[0], 'utf8')
  
  fstream.on('error', e => {
    console.error(`Mistake: ${e.message}`)
    process.exit(1)
  })

  lex(fstream)
    .then(tokens => argv.tokens ? inspect(tokens) : tokens)
    .then(parse)
    .then(trees => trees.length > 1 ? ambiguous(trees) : trees[0])
    .then(ast => argv.ast ? inspect(ast) : ast)
    .then(interp)
    .catch(error.format)
} else {
  // Help
  console.log(`Usage: wew [options] script.w

Options:
  -v, --version      print wew version and exit
  --ast              display AST generated from script
  --tokens           display tokenized form of script

Documentation can be found at https://git.io/vyKKp`)
}
